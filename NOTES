
    //mario 64 style rubberiness, faked with individual bounce tweens
    // var speedModifier = 10;
    // for(var i = 0; i < this.originalGeom.length; i++)
    // {
    //     this.originalGeom[i].speed.x += (this.originalGeom[i].x  - this.obj.geometry.vertices[i].x)/speedModifier;
    //     this.originalGeom[i].speed.y += (this.originalGeom[i].y  - this.obj.geometry.vertices[i].y)/speedModifier;
    //     this.originalGeom[i].speed.z += (this.originalGeom[i].z  - this.obj.geometry.vertices[i].z)/speedModifier;

    //     this.originalGeom[i].speed.x *= .9;
    //     this.originalGeom[i].speed.y *= .9;
    //     this.originalGeom[i].speed.z *= .9;

    //     this.obj.geometry.vertices[i].x += this.originalGeom[i].speed.x;
    //     this.obj.geometry.vertices[i].y += this.originalGeom[i].speed.y;
    //     this.obj.geometry.vertices[i].z += this.originalGeom[i].speed.z;

    //     if(Math.abs(this.obj.geometry.vertices[i].x) < Math.abs(this.originalGeom[i].x))
    //     {
    //         this.originalGeom[i].speed.x += (this.originalGeom[i].x - this.obj.geometry.vertices[i].x)/speedModifier;    
    //     }
    //     if(Math.abs(this.obj.geometry.vertices[i].y) < Math.abs(this.originalGeom[i].y))
    //     {
    //         this.originalGeom[i].speed.y += (this.originalGeom[i].y - this.obj.geometry.vertices[i].y)/speedModifier;    
    //     }
    //     if(Math.abs(this.obj.geometry.vertices[i].z) < Math.abs(this.originalGeom[i].z))
    //     {
    //         this.originalGeom[i].speed.z += (this.originalGeom[i].z - this.obj.geometry.vertices[i].z)/speedModifier;    
    //     }

    // }




    
            // if( normals != null )
            // {
            //     if(originalNormals == null)
            //     {
            //         originalNormals = [];
            //         for(normal in normals)
            //         {
            //             originalNormals.push(normal.clone());
            //         }
            //     }
            //     var n = [];
            //     for( i in 0...idList.length )
            //     {
            //         n.push(originalNormals[idList[i]].clone());
            //     }
            //     normals = n;
            // }



            
        pulseCounter += dt;

        if(pulseCounter > 150000)
        {
            // prim.runFilter(function(op:Point,p:Point)
            //     {
            //         p.setLength(Math.random()*2 + 1);
            //         kek = p;

            //         return null;
            //     });
            // prim.applyTween(function(np,op)
            //     {
            //         return TweenX.to( np, {x:op.x,y:op.y,z:op.z} ).time( 100 ).ease( EaseX.bounceOut );
            //     });
            // prim2.runFilter(function(op:Point,p:Point)
            //     {
            //         p.setLength(Math.random()*2 + 1);
            //         kek = p;

            //         return null;
            //     });
            // prim2.applyTween(function(np,op)
            //     {
            //         return TweenX.to( np, {x:op.x,y:op.y,z:op.z} ).time( 10 ).ease( EaseX.bounceOut );
            //     });
            // obj2.material.color.setColor(Math.floor(Math.random()*0xFFFFFF));
            // pulseCounter -= 150;
        }

        // prim.runFilter(function(op:Point,p:Point)
        //     {
        //         p.x = p.x - p.x%.2;
        //         p.y = p.y - p.y%.2;
        //         p.z = p.z - p.z%.2;
        //         trace(p.y);

        //         return null;
        //     });
        // prim.x += .01 * dt;
        // prim.z += .01 * dt;
        // prim.needsUpdate = true;
        // prim2.needsUpdate = true;

        // prim.update();
        // prim2.update();




        // rotate the second cube along a given axis + angle
        // obj2.setRotateAxis(-0.5, 2, Math.cos(time), time + Math.PI / 2);




        
        // if(e.kind == EKeyDown)
        // {
        //     if(e.keyCode == Key.LEFT)
        //     {
        //         obj1.x += 1;
        //     }
        //     if(e.keyCode == Key.RIGHT)
        //     {
        //         obj1.x -= 1;
        //     }
        // }